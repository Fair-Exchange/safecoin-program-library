use {
    solana_program::pubkey::Pubkey,
    solana_program_test::{ProgramTest, *},
    safe_associated_token_account::{id, processor::process_instruction},
};

#[allow(dead_code)]
pub fn program_test(token_mint_address: Pubkey, use_latest_safe_token: bool) -> ProgramTest {
    let mut pc = ProgramTest::new(
        "safe_associated_token_account",
        id(),
        processor!(process_instruction),
    );

    if use_latest_safe_token {
        // TODO: Remove when safe-token is available by default in program-test
        pc.add_program(
            "safe_token",
            safe_token::id(),
            processor!(safe_token::processor::Processor::process),
        );
    }

    // Add a token mint account
    //
    // The account data was generated by running:
    //      $ safecoin account Cs15wVAmfVBSNP7uWEQpAepuXoVpYU655HHSAftzKbn6 \
    //                       --output-file tests/fixtures/token-mint-data.bin
    //
    pc.add_account_with_file_data(
        token_mint_address,
        1461600,
        safe_token::id(),
        "token-mint-data.bin",
    );

    // Dial down the BPF compute budget to detect if the program gets bloated in the future
    pc.set_compute_max_units(50_000);

    pc
}

#[allow(dead_code)]
pub fn program_test_2022(
    token_mint_address: Pubkey,
    use_latest_safe_token_2022: bool,
) -> ProgramTest {
    let mut pc = ProgramTest::new(
        "safe_associated_token_account",
        id(),
        processor!(process_instruction),
    );

    if use_latest_safe_token_2022 {
        // TODO: Remove when safe-token-2022 is available by default in program-test
        pc.add_program(
            "safe_token_2022",
            safe_token_2022::id(),
            processor!(safe_token_2022::processor::Processor::process),
        );
    }

    // Add a token mint account
    //
    // The account data was generated by running:
    //      $ safecoin account Cs15wVAmfVBSNP7uWEQpAepuXoVpYU655HHSAftzKbn6 \
    //                       --output-file tests/fixtures/token-mint-data.bin
    //
    pc.add_account_with_file_data(
        token_mint_address,
        1461600,
        safe_token_2022::id(),
        "token-mint-data.bin",
    );

    // Dial down the BPF compute budget to detect if the program gets bloated in the future
    pc.set_compute_max_units(50_000);

    pc
}
